on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - name: Checkout
        uses: actions/checkout@v4
      # Install Python
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      # Install required packages
      - name: Install packages
        run: pip3 install -r requirements.txt
      # Run pytest
      - name: Run tests
        run: pytest
  lint:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - name: Checkout
        uses: actions/checkout@v4
      # Install Python
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      # Install required packages
      - name: Install packages
        run: pip3 install -r requirements.txt
      # Run pylint
      - name: Run linter
        run: pylint --fail-under=0 ./*.py
  deploy:
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
      # Checkout the code
      - name: Checkout
        uses: actions/checkout@v4
      - name: Copy to Ec2
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: ${{ secrets.REMOTE_TARGET }}
        uses: easingthemes/ssh-deploy@main
      - name: Create pemkey
        env:
          PEMKEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "$PEMKEY" >> keyfile
          chmod 400 keyfile
      - name: Stop previous
        run: |
          ssh -tt -i keyfile ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} << EOF
          PID=$(pgrep -f "python main")
          if [ ! -z "$PID" ]; then
          kill $PID
          else
          echo "No process running"
          fi
          exit
          EOF
      - name: Start new
        run: |
          ssh -i keyfile ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} <<EOF
          pip install -r requirements.txt
          nohup python3 main.py &
          exit
          EOF
